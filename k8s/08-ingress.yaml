---
# Ingress for HTTP/HTTPS traffic
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: otedama-ingress
  namespace: otedama
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
    nginx.ingress.kubernetes.io/proxy-body-size: "10m"
    nginx.ingress.kubernetes.io/proxy-read-timeout: "600"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "600"
spec:
  ingressClassName: nginx
  tls:
  - hosts:
    - pool.example.com
    - api.example.com
    - metrics.example.com
    secretName: otedama-tls
  rules:
  - host: pool.example.com
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: otedama
            port:
              number: 8080
  - host: api.example.com
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: otedama
            port:
              number: 8080
  - host: metrics.example.com
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: prometheus
            port:
              number: 9090

---
# NetworkPolicy for security
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: otedama-network-policy
  namespace: otedama
spec:
  podSelector:
    matchLabels:
      app: otedama
  policyTypes:
  - Ingress
  - Egress
  ingress:
  - from:
    - namespaceSelector:
        matchLabels:
          name: otedama
    - podSelector: {}
    ports:
    - protocol: TCP
      port: 3333
    - protocol: TCP
      port: 8080
    - protocol: TCP
      port: 9090
    - protocol: TCP
      port: 4444
  egress:
  - to:
    - namespaceSelector:
        matchLabels:
          name: otedama
    ports:
    - protocol: TCP
      port: 5432
    - protocol: TCP
      port: 6379
  - to:
    - namespaceSelector: {}
    ports:
    - protocol: TCP
      port: 443
    - protocol: TCP
      port: 80