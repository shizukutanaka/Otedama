apiVersion: v1
kind: Service
metadata:
  name: otedama-db
  namespace: otedama
  labels:
    app: otedama-db
spec:
  ports:
  - port: 5432
    name: postgres
  clusterIP: None
  selector:
    app: otedama-db
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: otedama-db
  namespace: otedama
spec:
  serviceName: otedama-db
  replicas: 3
  selector:
    matchLabels:
      app: otedama-db
  template:
    metadata:
      labels:
        app: otedama-db
    spec:
      initContainers:
      - name: init-config
        image: busybox:1.35
        command:
        - sh
        - -c
        - |
          if [ "$POD_NAME" = "otedama-db-0" ]; then
            echo "primary" > /var/lib/postgresql/role
          else
            echo "replica" > /var/lib/postgresql/role
          fi
        env:
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        volumeMounts:
        - name: postgres-config
          mountPath: /var/lib/postgresql
      containers:
      - name: postgres
        image: postgres:15-alpine
        ports:
        - containerPort: 5432
          name: postgres
        env:
        - name: POSTGRES_DB
          value: otedama
        - name: POSTGRES_USER
          value: otedama
        - name: POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef:
              name: otedama-db-secrets
              key: postgres-password
        - name: POSTGRES_REPLICATION_MODE
          value: master
        - name: POSTGRES_REPLICATION_USER
          value: replicator
        - name: POSTGRES_REPLICATION_PASSWORD
          valueFrom:
            secretKeyRef:
              name: otedama-db-secrets
              key: replication-password
        - name: PGDATA
          value: /var/lib/postgresql/data/pgdata
        resources:
          requests:
            memory: "1Gi"
            cpu: "500m"
          limits:
            memory: "4Gi"
            cpu: "2000m"
        volumeMounts:
        - name: postgres-storage
          mountPath: /var/lib/postgresql/data
        - name: postgres-config
          mountPath: /var/lib/postgresql/config
        livenessProbe:
          exec:
            command:
            - pg_isready
            - -U
            - otedama
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          exec:
            command:
            - pg_isready
            - -U
            - otedama
          initialDelaySeconds: 5
          periodSeconds: 5
      volumes:
      - name: postgres-config
        emptyDir: {}
  volumeClaimTemplates:
  - metadata:
      name: postgres-storage
    spec:
      accessModes: [ "ReadWriteOnce" ]
      storageClassName: fast-ssd
      resources:
        requests:
          storage: 100Gi
---
apiVersion: v1
kind: Secret
metadata:
  name: otedama-db-secrets
  namespace: otedama
type: Opaque
stringData:
  postgres-password: "your-postgres-password"
  replication-password: "your-replication-password"
---
apiVersion: v1
kind: Service
metadata:
  name: otedama-redis
  namespace: otedama
  labels:
    app: otedama-redis
spec:
  ports:
  - port: 6379
    name: redis
  - port: 26379
    name: sentinel
  clusterIP: None
  selector:
    app: otedama-redis
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: otedama-redis
  namespace: otedama
spec:
  serviceName: otedama-redis
  replicas: 3
  selector:
    matchLabels:
      app: otedama-redis
  template:
    metadata:
      labels:
        app: otedama-redis
    spec:
      containers:
      - name: redis
        image: redis:7-alpine
        command:
        - redis-server
        - /etc/redis/redis.conf
        ports:
        - containerPort: 6379
          name: redis
        resources:
          requests:
            memory: "512Mi"
            cpu: "250m"
          limits:
            memory: "2Gi"
            cpu: "1000m"
        volumeMounts:
        - name: redis-data
          mountPath: /data
        - name: redis-config
          mountPath: /etc/redis
        livenessProbe:
          tcpSocket:
            port: 6379
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          exec:
            command:
            - redis-cli
            - ping
          initialDelaySeconds: 5
          periodSeconds: 5
      - name: sentinel
        image: redis:7-alpine
        command:
        - redis-sentinel
        - /etc/redis/sentinel.conf
        ports:
        - containerPort: 26379
          name: sentinel
        resources:
          requests:
            memory: "256Mi"
            cpu: "100m"
          limits:
            memory: "512Mi"
            cpu: "200m"
        volumeMounts:
        - name: sentinel-config
          mountPath: /etc/redis
      volumes:
      - name: redis-config
        configMap:
          name: redis-config
      - name: sentinel-config
        configMap:
          name: sentinel-config
  volumeClaimTemplates:
  - metadata:
      name: redis-data
    spec:
      accessModes: [ "ReadWriteOnce" ]
      storageClassName: fast-ssd
      resources:
        requests:
          storage: 10Gi
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: redis-config
  namespace: otedama
data:
  redis.conf: |
    bind 0.0.0.0
    protected-mode yes
    port 6379
    tcp-backlog 511
    timeout 0
    tcp-keepalive 300
    daemonize no
    supervised no
    pidfile /var/run/redis_6379.pid
    loglevel notice
    logfile ""
    databases 16
    always-show-logo yes
    save 900 1
    save 300 10
    save 60 10000
    stop-writes-on-bgsave-error yes
    rdbcompression yes
    rdbchecksum yes
    dbfilename dump.rdb
    dir /data
    replica-serve-stale-data yes
    replica-read-only yes
    repl-diskless-sync no
    repl-diskless-sync-delay 5
    repl-disable-tcp-nodelay no
    replica-priority 100
    maxmemory 1gb
    maxmemory-policy allkeys-lru
    appendonly yes
    appendfilename "appendonly.aof"
    appendfsync everysec
    no-appendfsync-on-rewrite no
    auto-aof-rewrite-percentage 100
    auto-aof-rewrite-min-size 64mb
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: sentinel-config
  namespace: otedama
data:
  sentinel.conf: |
    bind 0.0.0.0
    port 26379
    sentinel announce-ip otedama-redis
    sentinel announce-port 26379
    dir /tmp
    sentinel monitor mymaster otedama-redis-0.otedama-redis 6379 2
    sentinel down-after-milliseconds mymaster 30000
    sentinel parallel-syncs mymaster 1
    sentinel failover-timeout mymaster 180000
    sentinel deny-scripts-reconfig yes