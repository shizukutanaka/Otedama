{
  "name": "otedama",
  "version": "1.0.0",
  "description": "Enterprise-Grade P2P Mining Pool, DEX & DeFi Platform",
  "main": "index.js",
  "type": "module",
  "directories": {
    "lib": "lib"
  },
  "dependencies": {
    "accept-language-parser": "^1.5.0",
    "axios": "^1.6.2",
    "bcrypt": "^5.1.1",
    "better-sqlite3": "^9.2.2",
    "body-parser": "^1.20.2",
    "compression": "^1.7.4",
    "cors": "^2.8.5",
    "dotenv": "^16.3.1",
    "exceljs": "^4.4.0",
    "express": "^4.18.2",
    "express-graphql": "^0.12.0",
    "express-rate-limit": "^7.1.5",
    "graphql": "^14.7.0",
    "graphql-iso-date": "^3.6.1",
    "helmet": "^7.1.0",
    "i18next": "^23.7.16",
    "jsonwebtoken": "^9.0.2",
    "knex": "^3.0.1",
    "node-cron": "^3.0.3",
    "pdfkit": "^0.14.0",
    "pg": "^8.11.3",
    "prom-client": "^15.0.0",
    "qrcode": "^1.5.3",
    "react-i18next": "^14.0.0",
    "speakeasy": "^2.0.0",
    "ws": "^8.14.2",
    "@tensorflow/tfjs-node": "^4.17.0",
    "web-push": "^3.6.6",
    "firebase-admin": "^12.0.0"
  },
  "devDependencies": {
    "autocannon": "^7.14.0",
    "eslint": "^8.55.0",
    "eslint-plugin-import": "^2.29.0",
    "eslint-plugin-node": "^11.1.0",
    "eslint-plugin-promise": "^6.1.1",
    "husky": "^9.0.0",
    "lint-staged": "^15.2.0",
    "nodemon": "^3.0.2",
    "prettier": "^3.3.0",
    "rimraf": "^5.0.5"
  },
  "scripts": {
    "start": "node index.js",
    "start:dev": "NODE_ENV=development node index.js",
    "start:prod": "NODE_ENV=production node index.js",
    "start:debug": "NODE_ENV=development LOG_LEVEL=debug node --inspect index.js",
    "format": "prettier --check .",
    "format:check": "prettier --check .",
    "format:write": "prettier --write .",
    "lint": "eslint .",
    "lint:fix": "eslint . --fix",
    "build": "echo 'Build process - copying static files and preparing distribution' && mkdir -p dist && cp -r lib dist/ && cp index.js dist/ && cp package.json dist/",
    "test": "node --import test/node-test-setup.js --test",
    "test:unit": "node --test test/unit/*.js",
    "test:integration": "node --test test/integration/*.js",
    "test:coverage": "c8 npm test",
    "test:e2e": "node test/e2e/e2e-runner.js",
    "test:perf": "node scripts/run-performance-benchmark.js",
    "test:stress": "node scripts/run-stress-tests.js",
    "test:security": "node scripts/run-security-audit.js",
    "test:scalability": "node scripts/run-scalability-tests.js",
    "test:load": "node scripts/load-test-v2.js",
    "test:production": "echo 'Running production tests' && npm run test:unit && npm run test:integration",
    "security-audit": "npm audit --audit-level=moderate && node scripts/run-security-audit.js",
    "scalability-test": "node scripts/run-scalability-tests.js",
    "benchmark": "node benchmark.js",
    "prepare": "husky install",
    "migrate": "node lib/migration.js",
    "docs:install": "npm --prefix docs-site install",
    "docs:i18n": "node scripts/generate-i18n.js",
    "docs:build": "npm run docs:install && npm run docs:i18n && npm --prefix docs-site run build",
    "docs:api": "node -e \"import('./lib/api/api-documentation-manager.js').then(m => new m.APIDocumentationManager().generateAllVersions())\"",
    "db:migrate": "node scripts/migrate.js",
    "db:backup": "node scripts/backup.js create",
    "db:backup:list": "node scripts/backup.js list",
    "db:backup:restore": "node scripts/backup.js restore",
    "db:backup:service": "node scripts/backup-service.js",
    "clean": "rimraf node_modules logs backups/old-files *.db-shm *.db-wal",
    "clean:old": "node scripts/cleanup-old-files.js",
    "clean:full": "npm run clean && npm install",
    "monitor": "node scripts/monitor.js",
    "metrics": "curl http://localhost:8080/api/monitoring/metrics",
    "health": "curl http://localhost:8080/health",
    "quick-start": "node quick-start.js",
    "docker:build": "docker build -t otedama .",
    "docker:run": "docker run -p 8080:8080 -p 8081:8081 -p 8082:8082 otedama",
    "docker:compose": "docker-compose up",
    "docker:compose:build": "docker-compose up --build",
    "docker:compose:down": "docker-compose down",
    "ci:prepare": "npm ci && npm run lint && npm run test",
    "ci:build": "npm run build && npm run docker:build",
    "ci:test": "npm run test:coverage && npm run test:integration && npm run security-audit",
    "ci:deploy": "echo 'Deployment handled by CI/CD pipeline'",
    "version:patch": "npm version patch && git push && git push --tags",
    "version:minor": "npm version minor && git push && git push --tags",
    "version:major": "npm version major && git push && git push --tags",
    "cost:monitor": "node lib/monitoring/cost-monitor.js",
    "cost:report": "node lib/monitoring/cost-monitor.js report",
    "cost:optimize": "node lib/monitoring/cost-monitor.js optimize",
    "cost:alert": "node lib/monitoring/cost-monitor.js alert",
    "domain:setup": "node scripts/setup-free-domain.js setup",
    "domain:summary": "node scripts/setup-free-domain.js summary",
    "domain:dns": "node scripts/setup-free-domain.js dns",
    "domain:ssl": "node scripts/setup-free-domain.js ssl",
    "deploy:free": "npm run build && npm run deploy:github && npm run deploy:netlify",
    "deploy:github": "echo 'Deploying to GitHub Pages via Actions'",
    "deploy:netlify": "netlify deploy --prod --dir=dist",
    "deploy:vercel": "vercel --prod",
    "deploy:railway": "railway up",
    "build:netlify": "npm run build && cp deploy/free-hosting/netlify.toml dist/",
    "build:vercel": "npm run build && cp deploy/free-hosting/vercel.json dist/",
    "build:github": "npm run build && mkdir -p dist/public && cp -r dist/* dist/public/",
    "free:setup": "npm run domain:setup && npm run cost:monitor",
    "free:deploy": "npm run deploy:free && npm run cost:monitor",
    "free:status": "npm run cost:report && npm run domain:summary"
  },
  "keywords": [
    "otedama",
    "p2p",
    "mining-pool",
    "dex",
    "defi",
    "blockchain",
    "cryptocurrency",
    "bitcoin",
    "stratum"
  ],
  "author": "Otedama Team",
  "lint-staged": {
    "*.{js,jsx,ts,tsx,json,css,md}": [
      "eslint --fix",
      "prettier --write"
    ]
  },
  "license": "MIT",
  "engines": {
    "node": ">=18.0.0"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/otedama/otedama.git"
  },
  "bugs": {
    "url": "https://github.com/otedama/otedama/issues"
  },
  "homepage": "https://otedama.io"
}
