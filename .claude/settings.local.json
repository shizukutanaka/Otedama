{
  "$schema": "https://json.schemastore.org/claude-code-settings.json",
  "permissions": {
    "allow": [
      "Bash(perl:*)",
      "Bash(sed:*)",
      "Bash(rm:*)",
      "Bash(ls:*)",
      "Bash(npm run lint)",
      "Bash(git add:*)",
      "Bash(git commit:*)",
      "Bash(git push:*)",
      "Bash(node:*)",
      "Bash(find:*)",
      "Bash(cp:*)",
      "Bash(grep:*)",
      "Bash(git rm:*)",
      "Bash(mkdir:*)",
      "Bash(git restore:*)",
      "Bash(git tag:*)",
      "Bash(go mod:*)",
      "Bash(go build:*)",
      "Bash(make:*)",
      "Bash(./bin/otedama:*)",
      "Bash(timeout:*)",
      "Bash(del Dockerfile.production)",
      "Bash(go get:*)",
      "Bash(touch:*)",
      "Bash(go test:*)",
      "Bash(/usr/local/go/bin/go test -v ./internal/mining/ -run TestMiningEngine)",
      "Bash(docker run:*)",
      "Bash(wsl.exe:*)",
      "Bash(cmd.exe /c \"go test -v ./internal/mining/ -run TestMiningEngine\")",
      "Bash(cmd.exe /c \"go mod tidy\")",
      "Bash(cmd.exe /c \"go test -v ./internal/mining/ -run TestMiningEngine_Initialize\")",
      "Bash(chmod:*)",
      "Bash(cmd.exe:*)",
      "Bash(./verify_fixes.sh)",
      "Bash(bash:*)",
      "Bash(git remote set-url:*)",
      "Bash(./cleanup_tests.sh:*)",
      "Bash(gh auth:*)",
      "Bash(git config:*)",
      "Bash(tree:*)",
      "Bash(./scripts/optimize_code.sh:*)",
      "Bash(dos2unix:*)",
      "Bash(cat:*)",
      "Bash(./cleanup_optimization.sh)",
      "Bash(./scripts/enterprise_code_checker.sh:*)",
      "Bash(test:*)",
      "Bash(\"/mnt/c/Program Files/Go/bin/go.exe\" version)",
      "Bash(\"/mnt/c/Program Files/Go/bin/go.exe\" build ./internal/mining/)",
      "Bash(\"/mnt/c/Program Files/Go/bin/go.exe\" build ./internal/crypto/)",
      "Bash(\"/mnt/c/Program Files/Go/bin/go.exe\" build ./cmd/otedama/ \")",
      "Bash(\"/mnt/c/Program Files/Go/bin/go.exe\" build ./cmd/otedama)",
      "Bash(\"/mnt/c/Program Files/Go/bin/go.exe\" build ./cmd/test-runner)",
      "Bash(\"/mnt/c/Program Files/Go/bin/go.exe\" mod download)",
      "Bash(/usr/local/go/bin/go build ./cmd/otedama/)",
      "Bash(mv:*)",
      "Bash(./update_changelogs.sh)",
      "Bash(/bin/rm -f internal/database/repositories_clean.go)",
      "Bash(del ARCHITECTURE.md)",
      "Bash(/usr/local/go/bin/go build ./cmd/otedama)",
      "Bash(./fix_imports.sh)",
      "Bash(for:*)",
      "Bash(do echo:*)",
      "Bash(done)",
      "Bash(/mnt/c/Users/irosa/Desktop/Otedama/scripts/performance_test.sh:*)",
      "Bash(\"/mnt/c/Program Files/Go/bin/go.exe\" get github.com/ethereum/go-ethereum/accounts github.com/ethereum/go-ethereum/crypto github.com/libp2p/go-libp2p github.com/libp2p/go-libp2p/core/crypto github.com/libp2p/go-libp2p/core/host github.com/libp2p/go-libp2p/core/network github.com/libp2p/go-libp2p/core/peer github.com/libp2p/go-libp2p/core/protocol github.com/libp2p/go-libp2p/p2p/security/noise github.com/libp2p/go-libp2p/p2p/security/tls github.com/miekg/pkcs11 github.com/lib/pq github.com/mattn/go-sqlite3)",
      "Bash(\"/mnt/c/Program Files/Go/bin/go.exe\" mod tidy)",
      "Bash(\"/mnt/c/Program Files/Go/bin/go.exe\" build -o otedama.exe ./cmd/otedama)",
      "Bash(\"/mnt/c/Program Files/Go/bin/go.exe\" build ./internal/security)",
      "Bash(\"/mnt/c/Program Files/Go/bin/go.exe\" build -o otedama.exe ./cmd/otedama/main.go)",
      "Bash(/mnt/c/Program Files/Go/bin/go.exe build -o otedama.exe ./cmd/otedama)",
      "Bash(/usr/local/go/bin/go test ./internal/mining/engine_test.go)"
    ],
    "deny": []
  }
}