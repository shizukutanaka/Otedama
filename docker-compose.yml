version: '3.8'

services:
  # Main mining pool service
  otedama:
    build: .
    image: otedama:latest
    container_name: otedama-pool
    restart: unless-stopped
    env_file:
      - .env.production
    environment:
      - NODE_ENV=production
      - NODE_OPTIONS=--max-old-space-size=4096
    ports:
      - "3333:3333"     # Stratum v1
      - "3336:3336"     # Stratum v2
      - "8080:8080"     # API
      - "8084:8084"     # Agent Dashboard
      - "9090:9090"     # Metrics
      - "33333:33333"   # P2P
    volumes:
      - ./data:/app/data
      - ./logs:/app/logs
      - ./backups:/app/backups
      - ./reports:/app/reports
      - ./config:/app/config:ro
    networks:
      - otedama-network
    depends_on:
      - redis
      - postgres
    logging:
      driver: "json-file"
      options:
        max-size: "100m"
        max-file: "10"
    deploy:
      resources:
        limits:
          cpus: '4'
          memory: 8G
        reservations:
          cpus: '2'
          memory: 4G

  # Redis cache
  redis:
    image: redis:7-alpine
    container_name: otedama-redis
    restart: unless-stopped
    command: redis-server --requirepass ${REDIS_PASSWORD:-change_me_in_production}
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    networks:
      - otedama-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # PostgreSQL database (optional - for advanced features)
  postgres:
    image: postgres:15-alpine
    container_name: otedama-postgres
    restart: unless-stopped
    environment:
      - POSTGRES_DB=otedama
      - POSTGRES_USER=otedama
      - POSTGRES_PASSWORD=${DB_PASSWORD:-change_me_in_production}
    ports:
      - "5432:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data
    networks:
      - otedama-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U otedama"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Prometheus for monitoring
  prometheus:
    image: prom/prometheus:latest
    container_name: otedama-prometheus
    restart: unless-stopped
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus-data:/prometheus
      - ./monitoring/alerts.yml:/etc/prometheus/alerts.yml:ro
    ports:
      - "9091:9090"
    networks:
      - otedama-network
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'

  # Grafana for visualization
  grafana:
    image: grafana/grafana:latest
    container_name: otedama-grafana
    restart: unless-stopped
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_PASSWORD:-change_me_in_production}
      - GF_USERS_ALLOW_SIGN_UP=false
    volumes:
      - grafana-data:/var/lib/grafana
      - ./monitoring/grafana/dashboards:/etc/grafana/provisioning/dashboards:ro
      - ./monitoring/grafana/datasources:/etc/grafana/provisioning/datasources:ro
    ports:
      - "3000:3000"
    networks:
      - otedama-network
    depends_on:
      - prometheus

networks:
  otedama-network:
    driver: bridge

volumes:
  redis-data:
  postgres-data:
  prometheus-data:
  grafana-data:
