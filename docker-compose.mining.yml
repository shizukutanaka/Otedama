version: '3.8'

services:
  # Main P2P Mining Pool
  mining-pool:
    build: .
    container_name: otedama-mining-pool
    restart: unless-stopped
    ports:
      - "3333:3333"   # Stratum port
      - "3336:3336"   # Stratum V2 port
      - "8333:8333"   # P2P port
      - "8080:8080"   # API port
    environment:
      - NODE_ENV=production
      - POOL_NAME=Otedama P2P Mining Pool
      - STRATUM_PORT=3333
      - STRATUM_V2_PORT=3336
      - P2P_PORT=8333
      - API_PORT=8080
      - P2P_ENABLED=true
      - MINING_ALGORITHM=sha256
      - PAYMENT_SCHEME=PPLNS
      - DATABASE_HOST=postgres
      - REDIS_HOST=redis
    depends_on:
      - postgres
      - redis
    volumes:
      - ./data/pool:/app/data
      - ./logs:/app/logs
    networks:
      - otedama-network
    command: node start-mining-pool.js

  # PostgreSQL with TimescaleDB
  postgres:
    image: timescale/timescaledb:latest-pg14
    container_name: otedama-postgres
    restart: unless-stopped
    environment:
      - POSTGRES_DB=otedama
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=otedama123
    volumes:
      - postgres-data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - otedama-network

  # Redis for caching
  redis:
    image: redis:7-alpine
    container_name: otedama-redis
    restart: unless-stopped
    command: redis-server --appendonly yes
    volumes:
      - redis-data:/data
    ports:
      - "6379:6379"
    networks:
      - otedama-network

  # Monitoring - Prometheus
  prometheus:
    image: prom/prometheus:latest
    container_name: otedama-prometheus
    restart: unless-stopped
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus-data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
    ports:
      - "9090:9090"
    networks:
      - otedama-network

  # Monitoring - Grafana
  grafana:
    image: grafana/grafana:latest
    container_name: otedama-grafana
    restart: unless-stopped
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_USERS_ALLOW_SIGN_UP=false
    volumes:
      - grafana-data:/var/lib/grafana
      - ./monitoring/grafana/dashboards:/etc/grafana/provisioning/dashboards
      - ./monitoring/grafana/datasources:/etc/grafana/provisioning/datasources
    ports:
      - "3000:3000"
    depends_on:
      - prometheus
    networks:
      - otedama-network

  # Mining Pool Dashboard
  dashboard:
    build: .
    container_name: otedama-dashboard
    restart: unless-stopped
    ports:
      - "8081:8081"
    environment:
      - NODE_ENV=production
      - API_URL=http://mining-pool:8080
    depends_on:
      - mining-pool
    volumes:
      - ./public:/app/public
    networks:
      - otedama-network
    command: node lib/ui/dashboard-server.js

networks:
  otedama-network:
    driver: bridge

volumes:
  postgres-data:
  redis-data:
  prometheus-data:
  grafana-data: